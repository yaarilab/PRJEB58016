

params.nproc = 20 //* @input @description:"How many processes to use for each step. Default 1"
params.mate="pair"
params.projectDir="${projectDir}" //* @input @description:"How many processes to use for each step. Default 1"

//* autofill



// Process Parameters for Mask_Primer_MaskPrimers:
params.Mask_Primer_MaskPrimers.method = ["align","align"]
params.Mask_Primer_MaskPrimers.mode = ["cut","cut"]
params.Mask_Primer_MaskPrimers.start = [0,0]
params.Mask_Primer_MaskPrimers.barcode = ["true","false"]
params.Mask_Primer_MaskPrimers.maxerror = [0.3,0.2]
params.Mask_Primer_MaskPrimers.revpr = ["false","false"]
params.Mask_Primer_MaskPrimers.maxlen = [30,50]
params.Mask_Primer_MaskPrimers.skiprc = ["false","true"]
params.Mask_Primer_MaskPrimers.failed = "true"
params.Mask_Primer_MaskPrimers.nproc = params.nproc
params.Mask_Primer_MaskPrimers.R1_primers = " "
params.Mask_Primer_MaskPrimers.R2_primers = "${projectDir}/primers/isotypes.human.fasta"



// Process Parameters for params.Cluster_UMI:
params.Cluster_UMI.umi_field = "UMI"
params.Cluster_UMI.umi_cluster_script = "${projectDir}/scripts/umi-v.0.4.py"



// Process Parameters for params.Align_Sets_align_sets:
params.Align_Sets_align_sets.method = "muscle"
params.Align_Sets_align_sets.bf = "UMI"
params.Align_Sets_align_sets.div = "fasle"
params.Align_Sets_align_sets.failed = "false"
params.Align_Sets_align_sets.nproc = params.nproc
params.Align_Sets_align_sets.muscle_exec = "/usr/local/bin/muscle"
params.Align_Sets_align_sets.offset_table = ""
params.Align_Sets_align_sets.pf = "PRIMER"
params.Align_Sets_align_sets.mode = ""
params.Align_Sets_align_sets.primer_file = ""
params.Align_Sets_align_sets.reverse = "false"

// Process Parameters for params.Align_Sets_parse_log_AS:
params.Align_Sets_parse_log_AS.field_to_parse = "ID BARCODE SEQCOUNT  ERROR "



// Process Parameters for params.Build_Consensus_build_consensus:
params.Build_Consensus_build_consensus.failed = "true"
params.Build_Consensus_build_consensus.nproc = params.nproc
params.Build_Consensus_build_consensus.barcode_field = ["UMI","UMI"]
params.Build_Consensus_build_consensus.primer_field = ["PRIMER","PRIMER"]
params.Build_Consensus_build_consensus.act = ["set","set"]
params.Build_Consensus_build_consensus.copy_field = ["PRIMER","PRIMER"]
params.Build_Consensus_build_consensus.mincount = [1,1]
params.Build_Consensus_build_consensus.minqual = [0,0]
params.Build_Consensus_build_consensus.minfreq = [0.6,0.6]
params.Build_Consensus_build_consensus.maxerror = ["0.1","0.1"]
params.Build_Consensus_build_consensus.prcons = ["none","none"]
params.Build_Consensus_build_consensus.maxgap = ["0.2","0.2"]
params.Build_Consensus_build_consensus.maxdiv = ["none","none"]
params.Build_Consensus_build_consensus.dep = ["false","false"]


// Process Parameters for params.Pair_Sequence_post_consensus_pair_seq:
params.Pair_Sequence_post_consensus_pair_seq.umi_position = "none"
params.Pair_Sequence_post_consensus_pair_seq.coord = "presto"
params.Pair_Sequence_post_consensus_pair_seq.nproc = params.nproc
params.Pair_Sequence_post_consensus_pair_seq.copy_fields_1 = "PRIMER"



// Process Parameters for params.Assemble_pairs_assemble_pairs:
params.Assemble_pairs_assemble_pairs.method = "sequential"
params.Assemble_pairs_assemble_pairs.coord = "presto"
params.Assemble_pairs_assemble_pairs.rc = "tail"
params.Assemble_pairs_assemble_pairs.head_fields_R2 = "CONSCOUNT PRIMER"
params.Assemble_pairs_assemble_pairs.failed = "false"
params.Assemble_pairs_assemble_pairs.fasta = "true"
params.Assemble_pairs_assemble_pairs.nproc = params.nproc
params.Assemble_pairs_assemble_pairs.alpha = 0.00001
params.Assemble_pairs_assemble_pairs.maxerror = 0.3
params.Assemble_pairs_assemble_pairs.minlen = 8
params.Assemble_pairs_assemble_pairs.maxlen = 1000
params.Assemble_pairs_assemble_pairs.scanrev = "false"
params.Assemble_pairs_assemble_pairs.minident = 0.5
params.Assemble_pairs_assemble_pairs.evalue = 0.00001
params.Assemble_pairs_assemble_pairs.maxhits = 100
params.Assemble_pairs_assemble_pairs.fill = "false"
params.Assemble_pairs_assemble_pairs.aligner = "usearch"
params.Assemble_pairs_assemble_pairs.gap = 0
params.Assemble_pairs_assemble_pairs.usearch_version="11.0.667"
params.Assemble_pairs_assemble_pairs.assemble_reference="${projectDir}/reference/humanIGH_w_gaps/human_gl_IGHV_F+ORF+in-frame_P_w_gaps.fasta"

// Process Parameters for params.Assemble_pairs_parse_log_AP:
params.Assemble_pairs_parse_log_AP.field_to_parse = "ID REFID LENGTH OVERLAP GAP ERROR IDENTITY PVALUE EVALUE1 EVALUE2"
	
	
